name: Deploy

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            lib_ext: "so"

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            lib_ext: "dylib"

          - build: macos
            os: macos-latest
            target: aarch64-apple-darwin
            lib_ext: "dylib"

          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            lib_ext: "dll"

    steps:
      - uses: olegtarasov/get-tag@v2.1.2
        id: get_version

      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - run: |
          sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev
        if: matrix.build == 'linux'

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.build }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
          cargo build --lib --release --target ${{ matrix.target }}
        env:
          MACOSX_DEPLOYMENT_TARGET: 13

      - name: Build archive
        shell: bash
        run: |
          binary_name="oklch-color-picker"

          dirname="$binary_name-${{ steps.get_version.outputs.tag }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.build }}" = "windows" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
          fi

          if [ "${{ matrix.build }}" = "windows" ]; then
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Rename lib
        working-directory: ./target/${{ matrix.target }}/release
        run: |
          mv *.${{ matrix.lib_ext }} "parser_lua_module-${{ matrix.target }}.${{ matrix.lib_ext }}"

      - name: Upload the binaries
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.ASSET }}
            target/${{ matrix.target }}/release/parser_lua_module-${{ matrix.target }}.${{ matrix.lib_ext }}
